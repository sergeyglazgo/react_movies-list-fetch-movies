{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","url","getMovie","title","a","fetch","json","FindMovie","addMovie","useState","setTitle","setMovie","movieNotFound","setMovieNotFound","handleSearch","foundMovie","hasOwnProperty","htmlFor","type","id","value","placeholder","classNames","onChange","event","target","onClick","App","setMovies","movieInList","some","ourMovie","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCffC,EAAM,8CAEL,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAC,EAAA,sEACeC,MAAM,GAAD,OAAIJ,GAAJ,OAAUE,IAD9B,cACCb,EADD,yBAGEA,EAAMgB,QAHR,4C,sBCUA,IAAMC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAON,EAAP,KAAcO,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOnB,EAAP,KAAcqB,EAAd,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAUMC,EAAY,uCAAG,4BAAAV,EAAA,sEACMF,EAASC,GADf,QACbY,EADa,QAGJC,eAAe,WAC5BL,EAASI,GACTL,EAAS,KAETG,GAAiB,GAPA,2CAAH,qDAWlB,OACE,qCACE,uBAAMtB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ0B,QAAQ,cAAjC,gBACG3B,QADH,IACGA,OADH,EACGA,EAAOK,QAGV,qBAAKJ,UAAU,UAAf,SACE,uBACE2B,KAAK,OACLC,GAAG,cACHC,MAAOjB,EACPkB,YAAY,0BACZ9B,UAAW+B,IAAW,QAAS,CAAE,YAAaV,IAC9CW,SAlCQ,SAACC,GACfZ,GACFC,GAAiB,GAGnBH,EAASc,EAAMC,OAAOL,YAiCfR,GACC,mBAAGrB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE2B,KAAK,SACL3B,UAAU,kBACVmC,QAASZ,EAHX,4BASF,qBAAKvB,UAAU,UAAf,SACE,wBACE2B,KAAK,SACL3B,UAAU,oBACVmC,QAAS,kBAAMlB,EAASlB,IAH1B,qCAWN,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,WClFvBqC,EAAe,WAC1B,MAA4BlB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAe8B,EAAf,KAUA,OACE,sBAAKrC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWiB,SAdM,SAAClB,GACtB,IAAMuC,EAAc/B,EAAOgC,MAAK,SAAAC,GAAQ,OAAIA,EAAS/B,UAAT,OAAoBV,QAApB,IAAoBA,OAApB,EAAoBA,EAAOU,WAEnEV,IAAUuC,GACZD,EAAU,GAAD,mBAAK9B,GAAL,CAAaR,cCR5B0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.31758bb3.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const url = 'https://www.omdbapi.com/?apikey=945b7878&t=';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const movie = await fetch(`${url}${title}`);\n\n  return movie.json();\n}\n","/* eslint-disable no-prototype-builtins */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  addMovie: (movie: Movie | null) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movieNotFound, setMovieNotFound] = useState(false);\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (movieNotFound) {\n      setMovieNotFound(false);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleSearch = async () => {\n    const foundMovie = await getMovie(title);\n\n    if (foundMovie.hasOwnProperty('imdbID')) {\n      setMovie(foundMovie);\n      setTitle('');\n    } else {\n      setMovieNotFound(true);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            {movie?.Title}\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': movieNotFound })}\n              onChange={handleInput}\n            />\n          </div>\n\n          {movieNotFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSearch}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovie(movie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App:React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie | null) => {\n    const movieInList = movies.some(ourMovie => ourMovie.imdbID === movie?.imdbID);\n\n    if (movie && !movieInList) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}